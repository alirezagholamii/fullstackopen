{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/api.js","App.js","index.js"],"names":["Persons","persons","handleDelete","map","person","name","number","onClick","PersonForm","handleSetPersons","handleUpdatePerson","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","some","window","confirm","value","onChange","target","type","Filter","handeChangeFilter","Notification","message","messageType","className","baseUrl","api","getPersons","axios","get","then","response","data","addPerson","newObject","post","deletePerson","id","delete","updatePerson","put","App","setPersons","filteredPersons","setFilteredPersons","setMessage","setMessageType","setNotification","msg","useEffect","catch","e","console","log","concat","filterValue","newArry","filter","toLowerCase","includes","setTimeout","error","item","res","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a07232e4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <>\n      {persons.map((person) => {\n        return (<div key={person.name}>{person.name} {person.number} <button onClick={() => { handleDelete(person) }}>delete</button></div>)\n      })}\n    </>\n  )\n}\n\nexport default Persons","import React, { useState } from 'react'\r\n\r\nconst PersonForm = ({ persons, handleSetPersons, handleUpdatePerson }) => {\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n\r\n    const handleChangeName = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n    const handleChangeNumber = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (newName === '') {\r\n            return\r\n        }\r\n\r\n        const isDuplicate = persons.some((person) => person.name === newName)\r\n        if (isDuplicate) {\r\n            const isConfirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\r\n            if (isConfirm) {\r\n                handleUpdatePerson({ name: newName, number: newNumber })\r\n                setNewName('')\r\n                setNewNumber('')\r\n            }\r\n            return\r\n        }\r\n        setNewName('')\r\n        setNewNumber('')\r\n        handleSetPersons({ name: newName, number: newNumber })\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleChangeName} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleChangeNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\n\nconst Filter = ({ handeChangeFilter }) => {\n  const handleChangeFilterValue = (event) => {\n    handeChangeFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <div>\n        filter shown with: <input onChange={handleChangeFilterValue} />\n      </div>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message, messageType }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={messageType}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getPersons = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst addPerson = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = ({ id }) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\n\r\nconst updatePerson = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst api = {\r\n    getPersons, addPerson, deletePerson, updatePerson\r\n}\r\nexport default api","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport api from './services/api'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState(null)\n\n\n\n  const handeChangeFilter = (filterValue) => {\n    const newArry = persons.filter((person) => (\n      person.name.toLowerCase().includes(filterValue.toLowerCase())\n    ))\n    setFilteredPersons(newArry)\n  }\n\n  const setNotification = (msg, type) => {\n    setMessage(msg)\n    setMessageType(type)\n  }\n\n\n  const handleSetPersons = (person) => {\n    api.addPerson(person)\n      .then((data) => {\n        setNotification(`Added ${person.name}`, 'success')\n        setPersons(persons.concat(data))\n        setTimeout(() => {\n          setNotification(null, null)\n        }, 5_000);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n        setNotification(error.response.data.error, 'error')\n        setTimeout(() => {\n          setNotification(null, null)\n        }, 5_000);\n      })\n  }\n\n  useEffect(() => {\n    api.getPersons()\n      .then((data) => {\n        setPersons(data)\n      })\n      .catch((e) => {\n        console.log(e);\n      })\n  }, [])\n\n  useEffect(() => {\n    setFilteredPersons(persons.concat())\n  }, [persons]);\n\n  const handleDeletePerson = (person) => {\n    const isConfirm = window.confirm(`Delete ${person.name} ?`)\n    if (isConfirm) {\n      api.deletePerson(person)\n        .then((res) => {\n          const newPersons = persons.filter(item => item.id !== person.id)\n          setPersons(newPersons)\n        })\n        .catch((e) => {\n          console.log(e);\n\n          setNotification(`Information of ${person.name} has already been removed from server`, 'error')\n          setTimeout(() => {\n            setNotification(null, null)\n          }, 5_000);\n        })\n    }\n  }\n  const handleUpdatePerson = (person) => {\n    let id = ''\n    for (const item of persons) {\n      if (item.name === person.name) {\n        id = item.id\n      }\n    }\n    api.updatePerson(id, person)\n      .then((res) => {\n        const newPersons = persons.map((item) => {\n          if (item.id === res.id) {\n            return res\n          }\n          return item\n        })\n        setPersons(newPersons)\n      })\n      .catch((error) => {\n        console.log(error);\n        setNotification(error.response.data.error, 'error')\n        setTimeout(() => {\n          setNotification(null, null)\n        }, 5_000);\n      })\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageType={messageType} />\n      <Filter handeChangeFilter={handeChangeFilter} />\n      <h3>Add a new</h3>\n      <PersonForm handleSetPersons={handleSetPersons} persons={persons} handleUpdatePerson={handleUpdatePerson} />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} handleDelete={handleDeletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}